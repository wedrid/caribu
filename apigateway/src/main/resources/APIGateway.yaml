openapi: 3.0.0
info:
  title: API Gateway
  version: 1.0.0
  description: API Gateway for managing requests

components:
 securitySchemes:
   oauth:   # <--- Arbitrary name for the security scheme. Used to refer to it from elsewhere.
     type: openIdConnect
     openIdConnectUrl: http://localhost:8989/realms/vertx-dev

paths:
  /ping:
    get: 
      summary: Ping API Gateway
      operationId: ping
      responses:
        '200':
          description: OK
  /pg/requests:
    get:
      summary: Get all requests 
      operationId: getAllRequests
      responses:
        '200':
          description: OK
  
  /richiesteapi/richieste: 
    post: 
      summary: Create a new richiesta
      operationId: createNewRichiesta
      responses:
        '200':
          description: OK
        '400':
          description: Bad request

  /richiesteapi/tratta:
    post: 
        summary: Create a new tratta
        operationId: createNewTratta
        responses:
          '200':
            description: OK
          '400':
            description: Bad request

  /richiesteapi/richieste/{richiestaId}:
    get:
      summary: Get a richiesta by ID
      operationId: getRichiestaById
      parameters:
        - in: path
          name: richiestaId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
        '404':
          description: richiesta not found
  /quoteapi/quotes:
    get:
      summary: Get all quotes records
      operationId: listQuotes
      responses:
        "200":
          description: Success
  
  /filialeapi/clientid/{companyName}: 
    get:
      summary: Get client id by companyName if exists, creates otherwise and returns the new id
      operationId: getClientIdByName
      parameters:
        - name: companyName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
  
  /serviceDiscoveryTrial: 
    get:
      summary: A trial
      operationId: discoveryTrial
      responses:
        '200':
          description: OK
  /requests/newRequest:
    post:
      summary: Create a new request
      operationId: createNewRequest
      responses:
        '200':
          description: OK
  /requests/request/{id}:
    get:
      summary: Get a request by id
      operationId: getRequestById
      responses:
        '200':
          description: OK
    put:
      summary: Update a request by id
      operationId: updateRequestById
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a request by id
      operationId: deleteRequestById
      responses:
        '200':
          description: OK
  /reqapi/requests:
    get:
      summary: Get all requests from service discovery commesse api 
      operationId: getRequestsFromCommesseApi
      responses:
        '200':
          description: OK
  /provaProxyy: 
    get: 
      summary: proxy prova
      operationId: provaProxy
      responses:
        '200':
          description: OK


components:
  schemas:
    Operator:
      type: object
      properties:
        id:
          type: integer
        operatorId:
          type: integer
        surname:
          type: string
        name:
          type: string
      required:
        - id
        - name
        - surname
        - userId
    Client:
      type: object
      properties:
        id:
          type: integer
        clientId:
          type: integer
        companyName:
          type: string
      required:
        - id
        - clientId
        - companyName
